package org.opentutorials.javatutorials._session2_4_scope;

		// for문에 영향을 미치는 예제
		// 실행하면 무한반복이 된다

		// static void a()메소드 안의 i앞에 있던 int가 없어지고 변수 i의 선언이 클래스 선언 바로 밑에서 이뤄지고 있다.
		// 이처럼 메소드 정의에 속한 것이 아니라 클래스 정의에 직접적으로 속한 변수를 *전역변수(global variable)라고 한다.
		// 반면 a()메소드 안에서 선언된 변수를 *지역변수(local variable)라고 한다.

		// for문안의 int 정수형 변수가 빠지고 i에 0을 할당만 했다. 변수의 선언은 바로 위의 전역변수에서 선언한 것이다.
		// 즉, i 변수를 메소드 바깥쪽의 클래스 영역에서 선언하고 a()메소드의 i는 값을 선언하지 않고 할당만 헀으며,
		// for문에서도 i변수를 사용하기 전에 선언하지 않고 할당만 했다.

		// 변수를 클래스 바로 밑에서 선언하게 되면 그렇게 선언한 변수는 이 클래스 안에 있는 모든 메소드와 모든 for문, 
		// 좀 더 일반화한다면 모든 중괄호{} 안에서 접근할 수 있는 '전역변수'가 되는 것이다.
		// 반면 중괄호{} 안에서 어떤 변수를 선언하면 그 변수는 해당 중괄호 안에서만 유효하고 중괄호{} 바깥에서는 접근할 수 없는 변수가 되는 것이다.


public class _003_ScopeDemo {

		static int i; // 전역변수
		
		static void a(){
			i = 0; 
		}
		
		// 방법1.(무한루프 푸는 방법) -> 지역변수가 설정된다.
		// static void a(){
		//		int i = 0;    -> a()메소드 안에서 int를 넣어서 i변수를 선언해주면 01234가 출력된다.
		// }
	
	public static void main(String[] args) {
		
		for(i=0; i<5; i++){ 
			a();
			System.out.println(i);
		}
		
		// 방법2. (무한루프 푸는 방법) -> for문 안에서 변수 i를 선언하면 for문의 중괄호{} 안에서만 i변수가 유효한 지역변수가 되기 때문이다.
		// for(int i=0; i<5; i++){  -> 조건절안의 i앞에 int를 넣어서 i변수를 선언해주면 01234가 출력된다.
		//		 a();
		//       System.out.println(i);
		// }

	}

}
