package org.opentutorials.javatutorials._session2_4_scope;

//		[예제23.11] m()메소드에서 전역변수와 이름이 같은 지역변수를 선언


//		프로그램 실행하면 결과로 20이 출력된다.
//		전역변수 v는 10의 값을 가지고 있는 상태이고, 지역변수 v가 새로 만들어져서 해당 지역변수에 20이라는 값이 들어있는 상태인데,
//		system.out.println(v);가 실행될 때 지역변수와 전역변수가 경합하게 되고 지역변수가 우선순위가 더 높아서 지역변수의 v의 값이 출력되기 때문이다.

//		변수를 중첩할 때의 장점은 기본적으로 v라는 변수의 10이라는 값은 모든 메소드나 모든 중괄호 안에서 공통적으로 사용할 수 있는 기본값이라고 생각할 수 있다는 것이다.
//		m()메소드에서 v라는 지역변수를 별도로 선언해서 값을 지정하면 m()메소드 안에서만 v의 값을 바꿀 수 있다.
//		그럼 전체적으로는 v의 값을 10으로 깔아놓고 그중에서 필요에 의해 v의 값에 다른 값을 줄 수 있다.
//		*이 경우 구체적인 값일수록 더 우선순위가 높다는 것도 일반적인 원칙이다.(이 원칙은 여러곳에서 사용되니 기억해둘 것)

class A{
	int v = 10;
	
	void m(){
		int v = 20;
		System.out.println(v);
	}
	
}


public class _011_ScopeDemo {

	public static void main(String[] args) {
		
		A c1 = new A();
		c1.m();

	}

}
